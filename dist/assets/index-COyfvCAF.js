var m=Object.defineProperty;var y=(o,e,t)=>e in o?m(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var h=(o,e,t)=>y(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function l(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();const b="4ca6d8a5a7c1845e205b54ef";class L{constructor(e){h(this,"baseURL");this.baseURL=e}async get(e){try{const t=await fetch(this.baseURL+e);if(console.log("Fetch status:",t.status),!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return t.json()}catch(t){throw console.error("Error fetching data:",t),t}}}const s=document.getElementById("base-currency"),i=document.getElementById("target-currency"),f=document.getElementById("conversion-result"),u=document.getElementById("base-amount"),a=document.getElementById("target-amount");a==null||a.setAttribute("disabled","true");let c={};const E=new L(`https://v6.exchangerate-api.com/v6/${b}/latest/`);async function v(o){try{const e=await fetch(E.baseURL+o);if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);const t=await e.json();t.conversion_rates&&(c=t.conversion_rates,p())}catch{}}function p(){if(!(!c||Object.keys(c).length===0)&&s&&i&&f){const o=s.value,e=i.value;if(c[e]){const t=c[e];f.textContent=`1 ${o} = ${t.toFixed(4)} ${e}`,g()}else f.textContent=`Exchange rate for ${e} not found.`}}function g(){if(!c||Object.keys(c).length===0){console.warn("Conversion rates not available yet.");return}if(s&&i&&u&&a){const o=i.value,e=parseFloat(u.value);if(isNaN(e)||e<=0){a.value="";return}if(c[o]){const t=c[o],l=e*t;a.value=l.toFixed(4)}else a.value=""}}s==null||s.addEventListener("change",()=>{s&&v(s.value)});i==null||i.addEventListener("change",p);u==null||u.addEventListener("input",g);document.addEventListener("DOMContentLoaded",()=>{s&&v(s.value)});
